inputs_def:
  - handle: image
    description: "%image-file-to-perform-ocr-on%"
    json_schema:
      type: string
      ui:widget: file
    nullable: false

  - handle: resolution
    description: "%resolution-mode-for-ocr-processing%"
    json_schema:
      type: string
      enum:
        - tiny
        - small
        - base
        - large
        - gundam
      default: base
    value: base
    nullable: false

  - handle: prompt
    description: "%custom-prompt-for-ocr-task%"
    json_schema:
      type: string
      ui:widget: "text"
    value: ""
    nullable: false

  - handle: use_gpu
    description: "%use-gpu-acceleration-cuda-for-processing%"
    json_schema:
      type: boolean
      default: true
    value: true
    nullable: false

outputs_def:
  - handle: markdown
    description: "Extracted text from the image"
    json_schema:
      type: string
      ui:widget: file

executor:
  name: python
  options:
    entry: __init__.py
    spawn: false

title: "%deepseek-ocr%"
icon: ":carbon:document-tasks:"
description: "%extract-text-from-images-using-deepseek-ocr-vision-language-mode%"
